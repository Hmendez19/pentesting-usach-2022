#!/bin/bash

function salto_linea(){
    echo 
    echo
}


function verificar_instalacion_docker(){
    echo "$DIBUJAR_LINEA"
    if ! [ -x "$(command -v docker)" ]; then
    echo 
    echo "$DOCKER_NO_INSTALADO"
    exit
    fi

    if sudo service docker status | grep inactive > /dev/null
    then 
        echo "$DOCKER_DETENIDO"
        echo -n "$DOCKER_INICIAR (y/n)?"
        read respuesta
        if echo "$respuesta" | grep -iq "^y"; then
            sudo service docker start
        fi
    fi
    echo "$DIBUJAR_LINEA"
    salto_linea
}

function ayuda_menu(){
    salto_linea
    echo "$DIBUJAR_LINEA"
    echo "$AYUDA_MENU"
    echo "luego presione ENTER" 
    echo "$DIBUJAR_LINEA"
}


function listar_aplicaciones(){
    clear
    salto_linea
    echo "$DIBUJAR_LINEA"
    echo "$TITULO_LISTA_APP"
    echo "$DIBUJAR_LINEA"
    declare -a arreglo_lista_app=("$BWAPP_NAME" "$WEBGOAT7_NAME" "$WEBGOAT78_NAME" "$WEBGOAT78_1_NAME" "$DVWA_NAME" "$MUTILLIDAE_NAME" )

    for val in "${arreglo_lista_app[@]}"; do
        echo $val
    done
    echo "$DIBUJAR_LINEA"
    salto_linea
}


function agregar_host() {
    DIRECCION_IP_DOCKER=$1
    NOMBRE_CONTENEDOR=$2
    AGREGAR_LINEA="$DIRECCION_IP_DOCKER\t$NOMBRE_CONTENEDOR"
    if [ -n "$(grep $2 $RUTA_ARCHIVO_HOST)" ]
        then
            echo "$NOMBRE_CONTENEDOR ya existe en $RUTA_ARCHIVO_HOST"
        else
            echo "NOMBRE DEL CONTENEDOR: $NOMBRE_CONTENEDOR  AGREGADO A L HOSTS";
            sudo -- sh -c -e "echo '$AGREGAR_LINEA' >> /etc/hosts";
    fi
}


function iniciar_aplicacion(){
    clear
    ayuda_menu
    opciones_app=("$BWAPP_NAME" "$WEBGOAT7_NAME" "$WEBGOAT78_NAME" "$WEBGOAT78_1_NAME" "$DVWA_NAME" "$MUTILLIDAE_NAME")
    elegir_opcion_menu "Seleccione una aplicacion:" opt "${opciones_app[@]}"
    case $opt in
        "$BWAPP_NAME")
            sudo docker run  -d -p 127.5.0.1:80:80 --name bwapp raesene/bwapp
            agregar_host "127.5.0.1" "bwapp"
            ;;
        "$WEBGOAT7_NAME")
            sudo docker run  -d -p 127.6.0.1:80:80 --name webgoat7 webgoat/webgoat-7.1
            agregar_host "127.6.0.1" "webgoat7"
            ;;
        "$WEBGOAT78_NAME")
            sudo docker run  -d -p 127.7.0.1:80:80 --name webgoat8 vwebgoat/webgoat-8.0
            agregar_host "127.7.0.1" "webgoat8"
            ;;
        "$WEBGOAT78_1_NAME")
            sudo docker run  -d -p 127.17.0.1:80:80 --name webgoat81 webgoat/goatandwolf
            agregar_host "127.17.0.1" "webgoat81"
            ;;
        "$DVWA_NAME")
            sudo docker run  -d -p 127.8.0.1:80:80 --name dvwa vulnerables/web-dvwa
            agregar_host "127.8.0.1" "dvwa"
            ;;
        "$MUTILLIDAE_NAME")
            sudo docker run  -d -p 127.9.0.1:80:80 --name mutillidae citizenstig/nowasp
            agregar_host "127.9.0.1" "mutillidae"
            ;;
    esac
}


function detener_aplicacion(){
    clear
    ayuda_menu
    opciones_app=("$BWAPP_NAME" "$WEBGOAT7_NAME" "$WEBGOAT78_NAME" "$WEBGOAT78_1_NAME" "$DVWA_NAME" "$MUTILLIDAE_NAME")
    elegir_opcion_menu "Seleccione una aplicacion:" opt "${opciones_app[@]}"
    echo "Deteniendo $opt"
    case $opt in
        "$BWAPP_NAME")
            sudo docker stop bwapp
            ;;
        "$WEBGOAT7_NAME")
            sudo docker stop webgoat7
            ;;
        "$WEBGOAT78_NAME")
            sudo docker stop webgoat8
            ;;
        "$WEBGOAT78_1_NAME")
            sudo docker stop webgoat81
            ;;
        "$DVWA_NAME")
            sudo docker stop dvwa
            ;;
        "$MUTILLIDAE_NAME")
            sudo docker stop mutillidae
            ;;
    esac
}

function menu_principal(){
    ayuda_menu
    opciones=("Listar aplicaciones" "Iniciar aplicacion" "Detener aplicacion" "Salir")
    elegir_opcion_menu "Seleccione:" opcion_seleccionada "${opciones[@]}"
    echo "$opcion_seleccionada"
    case $opcion_seleccionada in
        "Listar aplicaciones")
            listar_aplicaciones
            ;;
        "Iniciar aplicacion")
            iniciar_aplicacion
            ;;
        "Detener aplicacion")
            detener_aplicacion
            ;;
        "Salir")
            break
            ;;
        *) echo "Opcion invalida $REPLY";;
    esac
}

function elegir_opcion_menu() {
    local prompt="$1" outvar="$2"
    shift
    shift
    local options=("$@") cur=0 count=${#options[@]} index=0
    local esc=$(echo -en "\e") # caché ESC como prueba no permite códigos esc
    printf "$prompt\n"
    while true
    do
        # Enumerar todas las opciones (la lista de opciones está basada en cero)ed)
        index=0 
        for o in "${options[@]}"
        do
            if [ "$index" == "$cur" ]
            then echo -e " >\e[7m$o\e[0m" # Marcar y resaltar la opción actual
            else echo "  $o"
            fi
            index=$(( $index + 1 ))
        done
        read -s -n3 key # # Espera a que la usuario seleccione con la tecla direccinal o enter
        if [[ $key == $esc[A ]] # Flecha direccional arriba
        then cur=$(( $cur - 1 ))
            [ "$cur" -lt 0 ] && cur=0
        elif [[ $key == $esc[B ]]  # Flecha direccional abajo
        then cur=$(( $cur + 1 ))
            [ "$cur" -ge $count ] && cur=$(( $count - 1 ))
        elif [[ $key == "" ]] #Delimitador de lectura - ENTER
        then break
        fi
        echo -en "\e[${count}A" # sube al principio para volver a visualizar
    done
    # exportar la selección a la variable de salida solicitada
    printf -v $outvar "${options[$cur]}"
}